name: chocolatine
run-name: ${{github.actor}} choco's check
on:
  push:
    branches-ignore:
      - " ga-ignore-"
  pull_request:
    branches-ignore:
      - " ga-ignore-"
env:
  MIRROR_URL: git@github.com:EpitechPromo2028/B-DOP-200-BDX-2-1-chocolatine-jimmy.ramsamynaick.git
  EXECUTABLES: 'swapupcase'
jobs:
  no_test_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GH repository
        uses: actions/checkout@v4
        with:
          repository: ' '
      - name: No test job
        run: |
          if [[ "${{ github.repository }}" == "EpitechPromo2028/B-DOP-200-BDX-2-1-chocolatine-jimmy.ramsamynaick" ]]; then
            echo "No test are run in this job. It stops immediately"
            exit 1
          else
            exit 0
          fi

  check_coding_style:
    needs: no_test_job
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v4
        with:
          repository: ' '

      - name: Run coding-style checker script
        run: check.sh $(pwd) $(pwd)

      - name: Display coding style errors as annotations if any errors
        id: annotations
        run: |
          NB_ERRORS=$(cat coding-style-reports.log | wc -l)
          if [ $NB_ERRORS -ge 1 ]; then
             while IFS= read -r line
              do
                FILE=$(echo $line | cut -d ':' -f1)
                LINE=$(echo $line | cut -d ':' -f2)
                ERROR=$(echo $line | cut -d ':' -f3-)
              echo "::error file=$FILE,line=$LINE,title=$NB_ERRORS coding style errors found::$ERROR"
            done < coding-style-reports.log
              exit 1
          fi
            exit 0


  check_program_compilation:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: check_coding_style
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v4
        with:
          repository: ''

      - name: Compile repository
        run: make
      - name: Check file
        run: |
          for file in $EXECUTABLES;do
            if [ ! -x "$file" ]; then
              echo "File $file does not exist or is not executable"
              exit 1
            fi
          done

      - name: Clean repository
        run: make fclean



  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: check_program_compilation
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v4
        with:
          repository: ''

      - name: Compile tests binaries
        run: make unit_tests

  push_to_mirror:
    runs-on: ubuntu-latest
    needs:  run_tests
    if: github.event_name == 'push'
    steps:
      - name: Checkout GH repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1.1.1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
