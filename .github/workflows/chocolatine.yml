name: chocolatine
run-name: ${{github.actor}} choco's check
on:
  push:
    branches-ignore:
      - " ga-ignore-"
  pull_request:
    branches-ignore:
      - " ga-ignore-"
    env:
      REPOT_URL: git@github.com:EpitechPromo2028/B-DOP-200-BDX-2-1-chocolatine-jimmy.ramsamynaick.git
      EXECUTABLES: 'palindrome'
jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v2
        with:
          repository: ''

      - name: Run coding-style
        run: check.sh . /tmp

      - name: Create annotation for coding-style errors
        run: |
          input=/tmp/coding-style-reports.log
          if [ !-f "$input"] || [ !-s "$input"]; then
            echo "Error: $input file does not exist or is empty"
            exit 1
          fi
          while IFS= read -r -a line; do
            fields=($(printf "%s" "$line"|cut -d':' --output-delimiter=' ' -f1-))
          if [ ${#fields[@]} -ne 4 ]; then
          echo "Error: Unexpected number of fields in line: $line"
          continue
          fi
          if [ -z "${fields[0]}" ] || [ -z "${fields[1]}" ] || [ -z "${fields[2]}" ] || [ -z "${fields[3]}" ]; then
          echo "Error: Missing data in fields array: ${fields[@]}"
          continue
          fi
          echo "::error title=${fields[2]} coding style error, file=${fields[0]}, line=${fields[1]}::${fields[3]}"
          done < $input

      - name: Report banana result
        run: |
          NB_ERROR=$(cat /tmp/coding-style-reports.log | wc -l)
          NB_ERROR=$((NB_ERROR-1))
          if [ $NB_ERROR -gt 0 ]; then
            exit 1
          fi

  check_program_compilation:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: check_coding_style
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v2
        with:
          repository: ''

      - name: Compile repository
        run: make

      - name: Clean repository
        run: make fclean

      - name: Check file
        run: |
          for file in ${{ env.EXECUTABLES }};do
            if [ ! -x "$file" ]; then
              echo "File $file does not exist or is not executable"
              exit 1
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: check_program_compilation
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v2
        with:
          repository: ''

      - name: Compile tests binaries
        run: make unit_tests

  push_to_mirror:
    runs-on: ubuntu-latest
    needs:  run_tests
    if: github.event_name == 'push'
    steps:
      - name: Checkout GH repository
        uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.REPOT_URL }}
          ssh_private_key:
            ${{ secrets.SECRETSSSH_PRIVATE_KEY }}
